// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Generic 3D position hint for editing.
/// 
/// Generic 3D position hint for editing. It's just like a plain ``Node3D``, but it displays as a cross in the 3D editor at all times.
open class Marker3D: Node3D {
    override open class var godotClassName: StringName { "Marker3D" }
    
    /* Properties */
    
    /// Size of the gizmo cross that appears in the editor.
    final public var gizmoExtents: Double {
        get {
            return get_gizmo_extents ()
        }
        
        set {
            set_gizmo_extents (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_gizmo_extents: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_gizmo_extents")
        return withUnsafePointer(to: &Marker3D.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_gizmo_extents(_ extents: Double) {
        withUnsafePointer(to: extents) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(Marker3D.method_set_gizmo_extents, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_gizmo_extents: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_gizmo_extents")
        return withUnsafePointer(to: &Marker3D.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_gizmo_extents() -> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall(Marker3D.method_get_gizmo_extents, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
}

