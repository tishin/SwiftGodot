// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A 3D world boundary (half-space) shape used for physics collision.
/// 
/// A 3D world boundary shape, intended for use in physics. ``WorldBoundaryShape3D`` works like an infinite plane that forces all physics bodies to stay above it. The ``plane``'s normal determines which direction is considered as "above" and in the editor, the line over the plane represents this direction. It can for example be used for endless flat floors.
open class WorldBoundaryShape3D: Shape3D {
    override open class var godotClassName: StringName { "WorldBoundaryShape3D" }
    
    /* Properties */
    
    /// The ``Plane`` used by the ``WorldBoundaryShape3D`` for collision.
    final public var plane: Plane {
        get {
            return get_plane ()
        }
        
        set {
            set_plane (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_plane: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_plane")
        return withUnsafePointer(to: &WorldBoundaryShape3D.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3505987427)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_plane(_ plane: Plane) {
        withUnsafePointer(to: plane) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(WorldBoundaryShape3D.method_set_plane, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_plane: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_plane")
        return withUnsafePointer(to: &WorldBoundaryShape3D.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2753500971)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_plane() -> Plane {
        var _result: Plane = Plane ()
        gi.object_method_bind_ptrcall(WorldBoundaryShape3D.method_get_plane, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
}

