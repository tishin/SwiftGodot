// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Holds a reference to an ``Object``'s instance ID.
/// 
/// Utility class which holds a reference to the internal identifier of an ``Object`` instance, as given by ``Object/getInstanceId()``. This ID can then be used to retrieve the object instance with ``@GlobalScope.instance_from_id``.
/// 
/// This class is used internally by the editor inspector and script debugger, but can also be used in plugins to pass and display objects as their IDs.
/// 
open class EncodedObjectAsID: RefCounted {
    override open class var godotClassName: StringName { "EncodedObjectAsID" }
    
    /* Properties */
    
    /// The ``Object`` identifier stored in this ``EncodedObjectAsID`` instance. The object instance can be retrieved with ``@GlobalScope.instance_from_id``.
    final public var objectId: UInt {
        get {
            return get_object_id ()
        }
        
        set {
            set_object_id (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_object_id: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_object_id")
        return withUnsafePointer(to: &EncodedObjectAsID.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_object_id(_ id: UInt) {
        withUnsafePointer(to: id) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(EncodedObjectAsID.method_set_object_id, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_object_id: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_object_id")
        return withUnsafePointer(to: &EncodedObjectAsID.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_object_id() -> UInt {
        var _result: UInt = 0
        gi.object_method_bind_ptrcall(EncodedObjectAsID.method_get_object_id, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
}

