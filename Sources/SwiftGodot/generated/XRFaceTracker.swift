// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A tracked face.
/// 
/// An instance of this object represents a tracked face and its corresponding blend shapes. The blend shapes come from the <a href="https://docs.vrcft.io/docs/tutorial-avatars/tutorial-avatars-extras/unified-blendshapes">Unified Expressions</a> standard, and contain extended details and visuals for each blend shape. Additionally the <a href="https://docs.vrcft.io/docs/tutorial-avatars/tutorial-avatars-extras/compatibility/overview">Tracking Standard Comparison</a> page documents the relationship between Unified Expressions and other standards.
/// 
/// As face trackers are turned on they are registered with the ``XRServer``.
/// 
open class XRFaceTracker: XRTracker {
    override open class var godotClassName: StringName { "XRFaceTracker" }
    public enum BlendShapeEntry: Int64, CaseIterable, CustomDebugStringConvertible {
        /// Right eye looks outwards.
        case eyeLookOutRight = 0 // FT_EYE_LOOK_OUT_RIGHT
        /// Right eye looks inwards.
        case eyeLookInRight = 1 // FT_EYE_LOOK_IN_RIGHT
        /// Right eye looks upwards.
        case eyeLookUpRight = 2 // FT_EYE_LOOK_UP_RIGHT
        /// Right eye looks downwards.
        case eyeLookDownRight = 3 // FT_EYE_LOOK_DOWN_RIGHT
        /// Left eye looks outwards.
        case eyeLookOutLeft = 4 // FT_EYE_LOOK_OUT_LEFT
        /// Left eye looks inwards.
        case eyeLookInLeft = 5 // FT_EYE_LOOK_IN_LEFT
        /// Left eye looks upwards.
        case eyeLookUpLeft = 6 // FT_EYE_LOOK_UP_LEFT
        /// Left eye looks downwards.
        case eyeLookDownLeft = 7 // FT_EYE_LOOK_DOWN_LEFT
        /// Closes the right eyelid.
        case eyeClosedRight = 8 // FT_EYE_CLOSED_RIGHT
        /// Closes the left eyelid.
        case eyeClosedLeft = 9 // FT_EYE_CLOSED_LEFT
        /// Squeezes the right eye socket muscles.
        case eyeSquintRight = 10 // FT_EYE_SQUINT_RIGHT
        /// Squeezes the left eye socket muscles.
        case eyeSquintLeft = 11 // FT_EYE_SQUINT_LEFT
        /// Right eyelid widens beyond relaxed.
        case eyeWideRight = 12 // FT_EYE_WIDE_RIGHT
        /// Left eyelid widens beyond relaxed.
        case eyeWideLeft = 13 // FT_EYE_WIDE_LEFT
        /// Dilates the right eye pupil.
        case eyeDilationRight = 14 // FT_EYE_DILATION_RIGHT
        /// Dilates the left eye pupil.
        case eyeDilationLeft = 15 // FT_EYE_DILATION_LEFT
        /// Constricts the right eye pupil.
        case eyeConstrictRight = 16 // FT_EYE_CONSTRICT_RIGHT
        /// Constricts the left eye pupil.
        case eyeConstrictLeft = 17 // FT_EYE_CONSTRICT_LEFT
        /// Right eyebrow pinches in.
        case browPinchRight = 18 // FT_BROW_PINCH_RIGHT
        /// Left eyebrow pinches in.
        case browPinchLeft = 19 // FT_BROW_PINCH_LEFT
        /// Outer right eyebrow pulls down.
        case browLowererRight = 20 // FT_BROW_LOWERER_RIGHT
        /// Outer left eyebrow pulls down.
        case browLowererLeft = 21 // FT_BROW_LOWERER_LEFT
        /// Inner right eyebrow pulls up.
        case browInnerUpRight = 22 // FT_BROW_INNER_UP_RIGHT
        /// Inner left eyebrow pulls up.
        case browInnerUpLeft = 23 // FT_BROW_INNER_UP_LEFT
        /// Outer right eyebrow pulls up.
        case browOuterUpRight = 24 // FT_BROW_OUTER_UP_RIGHT
        /// Outer left eyebrow pulls up.
        case browOuterUpLeft = 25 // FT_BROW_OUTER_UP_LEFT
        /// Right side face sneers.
        case noseSneerRight = 26 // FT_NOSE_SNEER_RIGHT
        /// Left side face sneers.
        case noseSneerLeft = 27 // FT_NOSE_SNEER_LEFT
        /// Right side nose canal dilates.
        case nasalDilationRight = 28 // FT_NASAL_DILATION_RIGHT
        /// Left side nose canal dilates.
        case nasalDilationLeft = 29 // FT_NASAL_DILATION_LEFT
        /// Right side nose canal constricts.
        case nasalConstrictRight = 30 // FT_NASAL_CONSTRICT_RIGHT
        /// Left side nose canal constricts.
        case nasalConstrictLeft = 31 // FT_NASAL_CONSTRICT_LEFT
        /// Raises the right side cheek.
        case cheekSquintRight = 32 // FT_CHEEK_SQUINT_RIGHT
        /// Raises the left side cheek.
        case cheekSquintLeft = 33 // FT_CHEEK_SQUINT_LEFT
        /// Puffs the right side cheek.
        case cheekPuffRight = 34 // FT_CHEEK_PUFF_RIGHT
        /// Puffs the left side cheek.
        case cheekPuffLeft = 35 // FT_CHEEK_PUFF_LEFT
        /// Sucks in the right side cheek.
        case cheekSuckRight = 36 // FT_CHEEK_SUCK_RIGHT
        /// Sucks in the left side cheek.
        case cheekSuckLeft = 37 // FT_CHEEK_SUCK_LEFT
        /// Opens jawbone.
        case jawOpen = 38 // FT_JAW_OPEN
        /// Closes the mouth.
        case mouthClosed = 39 // FT_MOUTH_CLOSED
        /// Pushes jawbone right.
        case jawRight = 40 // FT_JAW_RIGHT
        /// Pushes jawbone left.
        case jawLeft = 41 // FT_JAW_LEFT
        /// Pushes jawbone forward.
        case jawForward = 42 // FT_JAW_FORWARD
        /// Pushes jawbone backward.
        case jawBackward = 43 // FT_JAW_BACKWARD
        /// Flexes jaw muscles.
        case jawClench = 44 // FT_JAW_CLENCH
        /// Raises the jawbone.
        case jawMandibleRaise = 45 // FT_JAW_MANDIBLE_RAISE
        /// Upper right lip part tucks in the mouth.
        case lipSuckUpperRight = 46 // FT_LIP_SUCK_UPPER_RIGHT
        /// Upper left lip part tucks in the mouth.
        case lipSuckUpperLeft = 47 // FT_LIP_SUCK_UPPER_LEFT
        /// Lower right lip part tucks in the mouth.
        case lipSuckLowerRight = 48 // FT_LIP_SUCK_LOWER_RIGHT
        /// Lower left lip part tucks in the mouth.
        case lipSuckLowerLeft = 49 // FT_LIP_SUCK_LOWER_LEFT
        /// Right lip corner folds into the mouth.
        case lipSuckCornerRight = 50 // FT_LIP_SUCK_CORNER_RIGHT
        /// Left lip corner folds into the mouth.
        case lipSuckCornerLeft = 51 // FT_LIP_SUCK_CORNER_LEFT
        /// Upper right lip part pushes into a funnel.
        case lipFunnelUpperRight = 52 // FT_LIP_FUNNEL_UPPER_RIGHT
        /// Upper left lip part pushes into a funnel.
        case lipFunnelUpperLeft = 53 // FT_LIP_FUNNEL_UPPER_LEFT
        /// Lower right lip part pushes into a funnel.
        case lipFunnelLowerRight = 54 // FT_LIP_FUNNEL_LOWER_RIGHT
        /// Lower left lip part pushes into a funnel.
        case lipFunnelLowerLeft = 55 // FT_LIP_FUNNEL_LOWER_LEFT
        /// Upper right lip part pushes outwards.
        case lipPuckerUpperRight = 56 // FT_LIP_PUCKER_UPPER_RIGHT
        /// Upper left lip part pushes outwards.
        case lipPuckerUpperLeft = 57 // FT_LIP_PUCKER_UPPER_LEFT
        /// Lower right lip part pushes outwards.
        case lipPuckerLowerRight = 58 // FT_LIP_PUCKER_LOWER_RIGHT
        /// Lower left lip part pushes outwards.
        case lipPuckerLowerLeft = 59 // FT_LIP_PUCKER_LOWER_LEFT
        /// Upper right part of the lip pulls up.
        case mouthUpperUpRight = 60 // FT_MOUTH_UPPER_UP_RIGHT
        /// Upper left part of the lip pulls up.
        case mouthUpperUpLeft = 61 // FT_MOUTH_UPPER_UP_LEFT
        /// Lower right part of the lip pulls up.
        case mouthLowerDownRight = 62 // FT_MOUTH_LOWER_DOWN_RIGHT
        /// Lower left part of the lip pulls up.
        case mouthLowerDownLeft = 63 // FT_MOUTH_LOWER_DOWN_LEFT
        /// Upper right lip part pushes in the cheek.
        case mouthUpperDeepenRight = 64 // FT_MOUTH_UPPER_DEEPEN_RIGHT
        /// Upper left lip part pushes in the cheek.
        case mouthUpperDeepenLeft = 65 // FT_MOUTH_UPPER_DEEPEN_LEFT
        /// Moves upper lip right.
        case mouthUpperRight = 66 // FT_MOUTH_UPPER_RIGHT
        /// Moves upper lip left.
        case mouthUpperLeft = 67 // FT_MOUTH_UPPER_LEFT
        /// Moves lower lip right.
        case mouthLowerRight = 68 // FT_MOUTH_LOWER_RIGHT
        /// Moves lower lip left.
        case mouthLowerLeft = 69 // FT_MOUTH_LOWER_LEFT
        /// Right lip corner pulls diagonally up and out.
        case mouthCornerPullRight = 70 // FT_MOUTH_CORNER_PULL_RIGHT
        /// Left lip corner pulls diagonally up and out.
        case mouthCornerPullLeft = 71 // FT_MOUTH_CORNER_PULL_LEFT
        /// Right corner lip slants up.
        case mouthCornerSlantRight = 72 // FT_MOUTH_CORNER_SLANT_RIGHT
        /// Left corner lip slants up.
        case mouthCornerSlantLeft = 73 // FT_MOUTH_CORNER_SLANT_LEFT
        /// Right corner lip pulls down.
        case mouthFrownRight = 74 // FT_MOUTH_FROWN_RIGHT
        /// Left corner lip pulls down.
        case mouthFrownLeft = 75 // FT_MOUTH_FROWN_LEFT
        /// Mouth corner lip pulls out and down.
        case mouthStretchRight = 76 // FT_MOUTH_STRETCH_RIGHT
        /// Mouth corner lip pulls out and down.
        case mouthStretchLeft = 77 // FT_MOUTH_STRETCH_LEFT
        /// Right lip corner is pushed backwards.
        case mouthDimpleRight = 78 // FT_MOUTH_DIMPLE_RIGHT
        /// Left lip corner is pushed backwards.
        case mouthDimpleLeft = 79 // FT_MOUTH_DIMPLE_LEFT
        /// Raises and slightly pushes out the upper mouth.
        case mouthRaiserUpper = 80 // FT_MOUTH_RAISER_UPPER
        /// Raises and slightly pushes out the lower mouth.
        case mouthRaiserLower = 81 // FT_MOUTH_RAISER_LOWER
        /// Right side lips press and flatten together vertically.
        case mouthPressRight = 82 // FT_MOUTH_PRESS_RIGHT
        /// Left side lips press and flatten together vertically.
        case mouthPressLeft = 83 // FT_MOUTH_PRESS_LEFT
        /// Right side lips squeeze together horizontally.
        case mouthTightenerRight = 84 // FT_MOUTH_TIGHTENER_RIGHT
        /// Left side lips squeeze together horizontally.
        case mouthTightenerLeft = 85 // FT_MOUTH_TIGHTENER_LEFT
        /// Tongue visibly sticks out of the mouth.
        case tongueOut = 86 // FT_TONGUE_OUT
        /// Tongue points upwards.
        case tongueUp = 87 // FT_TONGUE_UP
        /// Tongue points downwards.
        case tongueDown = 88 // FT_TONGUE_DOWN
        /// Tongue points right.
        case tongueRight = 89 // FT_TONGUE_RIGHT
        /// Tongue points left.
        case tongueLeft = 90 // FT_TONGUE_LEFT
        /// Sides of the tongue funnel, creating a roll.
        case tongueRoll = 91 // FT_TONGUE_ROLL
        /// Tongue arches up then down inside the mouth.
        case tongueBlendDown = 92 // FT_TONGUE_BLEND_DOWN
        /// Tongue arches down then up inside the mouth.
        case tongueCurlUp = 93 // FT_TONGUE_CURL_UP
        /// Tongue squishes together and thickens.
        case tongueSquish = 94 // FT_TONGUE_SQUISH
        /// Tongue flattens and thins out.
        case tongueFlat = 95 // FT_TONGUE_FLAT
        /// Tongue tip rotates clockwise, with the rest following gradually.
        case tongueTwistRight = 96 // FT_TONGUE_TWIST_RIGHT
        /// Tongue tip rotates counter-clockwise, with the rest following gradually.
        case tongueTwistLeft = 97 // FT_TONGUE_TWIST_LEFT
        /// Inner mouth throat closes.
        case softPalateClose = 98 // FT_SOFT_PALATE_CLOSE
        /// The Adam's apple visibly swallows.
        case throatSwallow = 99 // FT_THROAT_SWALLOW
        /// Right side neck visibly flexes.
        case neckFlexRight = 100 // FT_NECK_FLEX_RIGHT
        /// Left side neck visibly flexes.
        case neckFlexLeft = 101 // FT_NECK_FLEX_LEFT
        /// Closes both eye lids.
        case eyeClosed = 102 // FT_EYE_CLOSED
        /// Widens both eye lids.
        case eyeWide = 103 // FT_EYE_WIDE
        /// Squints both eye lids.
        case eyeSquint = 104 // FT_EYE_SQUINT
        /// Dilates both pupils.
        case eyeDilation = 105 // FT_EYE_DILATION
        /// Constricts both pupils.
        case eyeConstrict = 106 // FT_EYE_CONSTRICT
        /// Pulls the right eyebrow down and in.
        case browDownRight = 107 // FT_BROW_DOWN_RIGHT
        /// Pulls the left eyebrow down and in.
        case browDownLeft = 108 // FT_BROW_DOWN_LEFT
        /// Pulls both eyebrows down and in.
        case browDown = 109 // FT_BROW_DOWN
        /// Right brow appears worried.
        case browUpRight = 110 // FT_BROW_UP_RIGHT
        /// Left brow appears worried.
        case browUpLeft = 111 // FT_BROW_UP_LEFT
        /// Both brows appear worried.
        case browUp = 112 // FT_BROW_UP
        /// Entire face sneers.
        case noseSneer = 113 // FT_NOSE_SNEER
        /// Both nose canals dilate.
        case nasalDilation = 114 // FT_NASAL_DILATION
        /// Both nose canals constrict.
        case nasalConstrict = 115 // FT_NASAL_CONSTRICT
        /// Puffs both cheeks.
        case cheekPuff = 116 // FT_CHEEK_PUFF
        /// Sucks in both cheeks.
        case cheekSuck = 117 // FT_CHEEK_SUCK
        /// Raises both cheeks.
        case cheekSquint = 118 // FT_CHEEK_SQUINT
        /// Tucks in the upper lips.
        case lipSuckUpper = 119 // FT_LIP_SUCK_UPPER
        /// Tucks in the lower lips.
        case lipSuckLower = 120 // FT_LIP_SUCK_LOWER
        /// Tucks in both lips.
        case lipSuck = 121 // FT_LIP_SUCK
        /// Funnels in the upper lips.
        case lipFunnelUpper = 122 // FT_LIP_FUNNEL_UPPER
        /// Funnels in the lower lips.
        case lipFunnelLower = 123 // FT_LIP_FUNNEL_LOWER
        /// Funnels in both lips.
        case lipFunnel = 124 // FT_LIP_FUNNEL
        /// Upper lip part pushes outwards.
        case lipPuckerUpper = 125 // FT_LIP_PUCKER_UPPER
        /// Lower lip part pushes outwards.
        case lipPuckerLower = 126 // FT_LIP_PUCKER_LOWER
        /// Lips push outwards.
        case lipPucker = 127 // FT_LIP_PUCKER
        /// Raises the upper lips.
        case mouthUpperUp = 128 // FT_MOUTH_UPPER_UP
        /// Lowers the lower lips.
        case mouthLowerDown = 129 // FT_MOUTH_LOWER_DOWN
        /// Mouth opens, revealing teeth.
        case mouthOpen = 130 // FT_MOUTH_OPEN
        /// Moves mouth right.
        case mouthRight = 131 // FT_MOUTH_RIGHT
        /// Moves mouth left.
        case mouthLeft = 132 // FT_MOUTH_LEFT
        /// Right side of the mouth smiles.
        case mouthSmileRight = 133 // FT_MOUTH_SMILE_RIGHT
        /// Left side of the mouth smiles.
        case mouthSmileLeft = 134 // FT_MOUTH_SMILE_LEFT
        /// Mouth expresses a smile.
        case mouthSmile = 135 // FT_MOUTH_SMILE
        /// Right side of the mouth expresses sadness.
        case mouthSadRight = 136 // FT_MOUTH_SAD_RIGHT
        /// Left side of the mouth expresses sadness.
        case mouthSadLeft = 137 // FT_MOUTH_SAD_LEFT
        /// Mouth expresses sadness.
        case mouthSad = 138 // FT_MOUTH_SAD
        /// Mouth stretches.
        case mouthStretch = 139 // FT_MOUTH_STRETCH
        /// Lip corners dimple.
        case mouthDimple = 140 // FT_MOUTH_DIMPLE
        /// Mouth tightens.
        case mouthTightener = 141 // FT_MOUTH_TIGHTENER
        /// Mouth presses together.
        case mouthPress = 142 // FT_MOUTH_PRESS
        /// Represents the size of the ``XRFaceTracker/BlendShapeEntry`` enum.
        case max = 143 // FT_MAX
        /// A textual representation of this instance, suitable for debugging
        public var debugDescription: String {
            switch self {
                case .eyeLookOutRight: return ".eyeLookOutRight"
                case .eyeLookInRight: return ".eyeLookInRight"
                case .eyeLookUpRight: return ".eyeLookUpRight"
                case .eyeLookDownRight: return ".eyeLookDownRight"
                case .eyeLookOutLeft: return ".eyeLookOutLeft"
                case .eyeLookInLeft: return ".eyeLookInLeft"
                case .eyeLookUpLeft: return ".eyeLookUpLeft"
                case .eyeLookDownLeft: return ".eyeLookDownLeft"
                case .eyeClosedRight: return ".eyeClosedRight"
                case .eyeClosedLeft: return ".eyeClosedLeft"
                case .eyeSquintRight: return ".eyeSquintRight"
                case .eyeSquintLeft: return ".eyeSquintLeft"
                case .eyeWideRight: return ".eyeWideRight"
                case .eyeWideLeft: return ".eyeWideLeft"
                case .eyeDilationRight: return ".eyeDilationRight"
                case .eyeDilationLeft: return ".eyeDilationLeft"
                case .eyeConstrictRight: return ".eyeConstrictRight"
                case .eyeConstrictLeft: return ".eyeConstrictLeft"
                case .browPinchRight: return ".browPinchRight"
                case .browPinchLeft: return ".browPinchLeft"
                case .browLowererRight: return ".browLowererRight"
                case .browLowererLeft: return ".browLowererLeft"
                case .browInnerUpRight: return ".browInnerUpRight"
                case .browInnerUpLeft: return ".browInnerUpLeft"
                case .browOuterUpRight: return ".browOuterUpRight"
                case .browOuterUpLeft: return ".browOuterUpLeft"
                case .noseSneerRight: return ".noseSneerRight"
                case .noseSneerLeft: return ".noseSneerLeft"
                case .nasalDilationRight: return ".nasalDilationRight"
                case .nasalDilationLeft: return ".nasalDilationLeft"
                case .nasalConstrictRight: return ".nasalConstrictRight"
                case .nasalConstrictLeft: return ".nasalConstrictLeft"
                case .cheekSquintRight: return ".cheekSquintRight"
                case .cheekSquintLeft: return ".cheekSquintLeft"
                case .cheekPuffRight: return ".cheekPuffRight"
                case .cheekPuffLeft: return ".cheekPuffLeft"
                case .cheekSuckRight: return ".cheekSuckRight"
                case .cheekSuckLeft: return ".cheekSuckLeft"
                case .jawOpen: return ".jawOpen"
                case .mouthClosed: return ".mouthClosed"
                case .jawRight: return ".jawRight"
                case .jawLeft: return ".jawLeft"
                case .jawForward: return ".jawForward"
                case .jawBackward: return ".jawBackward"
                case .jawClench: return ".jawClench"
                case .jawMandibleRaise: return ".jawMandibleRaise"
                case .lipSuckUpperRight: return ".lipSuckUpperRight"
                case .lipSuckUpperLeft: return ".lipSuckUpperLeft"
                case .lipSuckLowerRight: return ".lipSuckLowerRight"
                case .lipSuckLowerLeft: return ".lipSuckLowerLeft"
                case .lipSuckCornerRight: return ".lipSuckCornerRight"
                case .lipSuckCornerLeft: return ".lipSuckCornerLeft"
                case .lipFunnelUpperRight: return ".lipFunnelUpperRight"
                case .lipFunnelUpperLeft: return ".lipFunnelUpperLeft"
                case .lipFunnelLowerRight: return ".lipFunnelLowerRight"
                case .lipFunnelLowerLeft: return ".lipFunnelLowerLeft"
                case .lipPuckerUpperRight: return ".lipPuckerUpperRight"
                case .lipPuckerUpperLeft: return ".lipPuckerUpperLeft"
                case .lipPuckerLowerRight: return ".lipPuckerLowerRight"
                case .lipPuckerLowerLeft: return ".lipPuckerLowerLeft"
                case .mouthUpperUpRight: return ".mouthUpperUpRight"
                case .mouthUpperUpLeft: return ".mouthUpperUpLeft"
                case .mouthLowerDownRight: return ".mouthLowerDownRight"
                case .mouthLowerDownLeft: return ".mouthLowerDownLeft"
                case .mouthUpperDeepenRight: return ".mouthUpperDeepenRight"
                case .mouthUpperDeepenLeft: return ".mouthUpperDeepenLeft"
                case .mouthUpperRight: return ".mouthUpperRight"
                case .mouthUpperLeft: return ".mouthUpperLeft"
                case .mouthLowerRight: return ".mouthLowerRight"
                case .mouthLowerLeft: return ".mouthLowerLeft"
                case .mouthCornerPullRight: return ".mouthCornerPullRight"
                case .mouthCornerPullLeft: return ".mouthCornerPullLeft"
                case .mouthCornerSlantRight: return ".mouthCornerSlantRight"
                case .mouthCornerSlantLeft: return ".mouthCornerSlantLeft"
                case .mouthFrownRight: return ".mouthFrownRight"
                case .mouthFrownLeft: return ".mouthFrownLeft"
                case .mouthStretchRight: return ".mouthStretchRight"
                case .mouthStretchLeft: return ".mouthStretchLeft"
                case .mouthDimpleRight: return ".mouthDimpleRight"
                case .mouthDimpleLeft: return ".mouthDimpleLeft"
                case .mouthRaiserUpper: return ".mouthRaiserUpper"
                case .mouthRaiserLower: return ".mouthRaiserLower"
                case .mouthPressRight: return ".mouthPressRight"
                case .mouthPressLeft: return ".mouthPressLeft"
                case .mouthTightenerRight: return ".mouthTightenerRight"
                case .mouthTightenerLeft: return ".mouthTightenerLeft"
                case .tongueOut: return ".tongueOut"
                case .tongueUp: return ".tongueUp"
                case .tongueDown: return ".tongueDown"
                case .tongueRight: return ".tongueRight"
                case .tongueLeft: return ".tongueLeft"
                case .tongueRoll: return ".tongueRoll"
                case .tongueBlendDown: return ".tongueBlendDown"
                case .tongueCurlUp: return ".tongueCurlUp"
                case .tongueSquish: return ".tongueSquish"
                case .tongueFlat: return ".tongueFlat"
                case .tongueTwistRight: return ".tongueTwistRight"
                case .tongueTwistLeft: return ".tongueTwistLeft"
                case .softPalateClose: return ".softPalateClose"
                case .throatSwallow: return ".throatSwallow"
                case .neckFlexRight: return ".neckFlexRight"
                case .neckFlexLeft: return ".neckFlexLeft"
                case .eyeClosed: return ".eyeClosed"
                case .eyeWide: return ".eyeWide"
                case .eyeSquint: return ".eyeSquint"
                case .eyeDilation: return ".eyeDilation"
                case .eyeConstrict: return ".eyeConstrict"
                case .browDownRight: return ".browDownRight"
                case .browDownLeft: return ".browDownLeft"
                case .browDown: return ".browDown"
                case .browUpRight: return ".browUpRight"
                case .browUpLeft: return ".browUpLeft"
                case .browUp: return ".browUp"
                case .noseSneer: return ".noseSneer"
                case .nasalDilation: return ".nasalDilation"
                case .nasalConstrict: return ".nasalConstrict"
                case .cheekPuff: return ".cheekPuff"
                case .cheekSuck: return ".cheekSuck"
                case .cheekSquint: return ".cheekSquint"
                case .lipSuckUpper: return ".lipSuckUpper"
                case .lipSuckLower: return ".lipSuckLower"
                case .lipSuck: return ".lipSuck"
                case .lipFunnelUpper: return ".lipFunnelUpper"
                case .lipFunnelLower: return ".lipFunnelLower"
                case .lipFunnel: return ".lipFunnel"
                case .lipPuckerUpper: return ".lipPuckerUpper"
                case .lipPuckerLower: return ".lipPuckerLower"
                case .lipPucker: return ".lipPucker"
                case .mouthUpperUp: return ".mouthUpperUp"
                case .mouthLowerDown: return ".mouthLowerDown"
                case .mouthOpen: return ".mouthOpen"
                case .mouthRight: return ".mouthRight"
                case .mouthLeft: return ".mouthLeft"
                case .mouthSmileRight: return ".mouthSmileRight"
                case .mouthSmileLeft: return ".mouthSmileLeft"
                case .mouthSmile: return ".mouthSmile"
                case .mouthSadRight: return ".mouthSadRight"
                case .mouthSadLeft: return ".mouthSadLeft"
                case .mouthSad: return ".mouthSad"
                case .mouthStretch: return ".mouthStretch"
                case .mouthDimple: return ".mouthDimple"
                case .mouthTightener: return ".mouthTightener"
                case .mouthPress: return ".mouthPress"
                case .max: return ".max"
            }
            
        }
        
    }
    
    
    /* Properties */
    
    /// The array of face blend shape weights with indices corresponding to the ``XRFaceTracker/BlendShapeEntry`` enum.
    final public var blendShapes: PackedFloat32Array {
        get {
            return get_blend_shapes ()
        }
        
        set {
            set_blend_shapes (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_get_blend_shape: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_blend_shape")
        return withUnsafePointer(to: &XRFaceTracker.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 330010046)!
            }
            
        }
        
    }()
    
    /// Returns the requested face blend shape weight.
    public final func getBlendShape(_ blendShape: XRFaceTracker.BlendShapeEntry) -> Double {
        var _result: Double = 0.0
        withUnsafePointer(to: blendShape.rawValue) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(XRFaceTracker.method_get_blend_shape, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result)
                }
                
            }
            
        }
        
        return _result
    }
    
    fileprivate static var method_set_blend_shape: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_blend_shape")
        return withUnsafePointer(to: &XRFaceTracker.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2352588791)!
            }
            
        }
        
    }()
    
    /// Sets a face blend shape weight.
    public final func setBlendShape(_ blendShape: XRFaceTracker.BlendShapeEntry, weight: Double) {
        withUnsafePointer(to: blendShape.rawValue) { pArg0 in
            withUnsafePointer(to: weight) { pArg1 in
                withUnsafePointer(to: UnsafeRawPointersN2(pArg0, pArg1)) { pArgs in
                    pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 2) { pArgs in
                        gi.object_method_bind_ptrcall(XRFaceTracker.method_set_blend_shape, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                    }
                    
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_blend_shapes: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_blend_shapes")
        return withUnsafePointer(to: &XRFaceTracker.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 675695659)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_blend_shapes() -> PackedFloat32Array {
        let _result: PackedFloat32Array = PackedFloat32Array ()
        gi.object_method_bind_ptrcall(XRFaceTracker.method_get_blend_shapes, UnsafeMutableRawPointer(mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_blend_shapes: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_blend_shapes")
        return withUnsafePointer(to: &XRFaceTracker.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2899603908)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_blend_shapes(_ weights: PackedFloat32Array) {
        withUnsafePointer(to: weights.content) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(XRFaceTracker.method_set_blend_shapes, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
}

