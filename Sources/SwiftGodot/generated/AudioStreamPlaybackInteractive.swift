// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Playback component of ``AudioStreamInteractive``.
/// 
/// Playback component of ``AudioStreamInteractive``. Contains functions to change the currently played clip.
open class AudioStreamPlaybackInteractive: AudioStreamPlayback {
    override open class var godotClassName: StringName { "AudioStreamPlaybackInteractive" }
    /* Methods */
    fileprivate static var method_switch_to_clip_by_name: GDExtensionMethodBindPtr = {
        let methodName = StringName("switch_to_clip_by_name")
        return withUnsafePointer(to: &AudioStreamPlaybackInteractive.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3304788590)!
            }
            
        }
        
    }()
    
    /// Switch to a clip (by name).
    public final func switchToClipByName(clipName: StringName) {
        withUnsafePointer(to: clipName.content) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioStreamPlaybackInteractive.method_switch_to_clip_by_name, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_switch_to_clip: GDExtensionMethodBindPtr = {
        let methodName = StringName("switch_to_clip")
        return withUnsafePointer(to: &AudioStreamPlaybackInteractive.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    /// Switch to a clip (by index).
    public final func switchToClip(clipIndex: Int32) {
        withUnsafePointer(to: clipIndex) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioStreamPlaybackInteractive.method_switch_to_clip, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
}

