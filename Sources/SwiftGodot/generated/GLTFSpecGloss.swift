// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Archived GLTF extension for specular/glossy materials.
/// 
/// KHR_materials_pbrSpecularGlossiness is an archived GLTF extension. This means that it is deprecated and not recommended for new files. However, it is still supported for loading old files.
open class GLTFSpecGloss: Resource {
    override open class var godotClassName: StringName { "GLTFSpecGloss" }
    
    /* Properties */
    
    /// The diffuse texture.
    final public var diffuseImg: Image? {
        get {
            return get_diffuse_img ()
        }
        
        set {
            set_diffuse_img (newValue)
        }
        
    }
    
    /// The reflected diffuse factor of the material.
    final public var diffuseFactor: Color {
        get {
            return get_diffuse_factor ()
        }
        
        set {
            set_diffuse_factor (newValue)
        }
        
    }
    
    /// The glossiness or smoothness of the material.
    final public var glossFactor: Double {
        get {
            return get_gloss_factor ()
        }
        
        set {
            set_gloss_factor (newValue)
        }
        
    }
    
    /// The specular RGB color of the material. The alpha channel is unused.
    final public var specularFactor: Color {
        get {
            return get_specular_factor ()
        }
        
        set {
            set_specular_factor (newValue)
        }
        
    }
    
    /// The specular-glossiness texture.
    final public var specGlossImg: Image? {
        get {
            return get_spec_gloss_img ()
        }
        
        set {
            set_spec_gloss_img (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_get_diffuse_img: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_diffuse_img")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 564927088)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_diffuse_img() -> Image? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall(GLTFSpecGloss.method_get_diffuse_img, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    fileprivate static var method_set_diffuse_img: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_diffuse_img")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 532598488)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_diffuse_img(_ diffuseImg: Image?) {
        withUnsafePointer(to: diffuseImg?.handle) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFSpecGloss.method_set_diffuse_img, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_diffuse_factor: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_diffuse_factor")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3200896285)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_diffuse_factor() -> Color {
        var _result: Color = Color ()
        gi.object_method_bind_ptrcall(GLTFSpecGloss.method_get_diffuse_factor, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_diffuse_factor: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_diffuse_factor")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2920490490)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_diffuse_factor(_ diffuseFactor: Color) {
        withUnsafePointer(to: diffuseFactor) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFSpecGloss.method_set_diffuse_factor, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_gloss_factor: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_gloss_factor")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 191475506)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_gloss_factor() -> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall(GLTFSpecGloss.method_get_gloss_factor, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_gloss_factor: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_gloss_factor")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_gloss_factor(_ glossFactor: Double) {
        withUnsafePointer(to: glossFactor) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFSpecGloss.method_set_gloss_factor, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_specular_factor: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_specular_factor")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3200896285)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_specular_factor() -> Color {
        var _result: Color = Color ()
        gi.object_method_bind_ptrcall(GLTFSpecGloss.method_get_specular_factor, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_specular_factor: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_specular_factor")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2920490490)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_specular_factor(_ specularFactor: Color) {
        withUnsafePointer(to: specularFactor) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFSpecGloss.method_set_specular_factor, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_spec_gloss_img: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_spec_gloss_img")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 564927088)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_spec_gloss_img() -> Image? {
        var _result = UnsafeRawPointer (bitPattern: 0)
        gi.object_method_bind_ptrcall(GLTFSpecGloss.method_get_spec_gloss_img, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        guard let _result else { return nil } ; return lookupObject (nativeHandle: _result)!
    }
    
    fileprivate static var method_set_spec_gloss_img: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_spec_gloss_img")
        return withUnsafePointer(to: &GLTFSpecGloss.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 532598488)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_spec_gloss_img(_ specGlossImg: Image?) {
        withUnsafePointer(to: specGlossImg?.handle) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFSpecGloss.method_set_spec_gloss_img, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
}

