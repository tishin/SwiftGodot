// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// A physics joint that attaches two 3D physics bodies at a single point, allowing them to freely rotate.
/// 
/// A physics joint that attaches two 3D physics bodies at a single point, allowing them to freely rotate. For example, a ``RigidBody3D`` can be attached to a ``StaticBody3D`` to create a pendulum or a seesaw.
open class PinJoint3D: Joint3D {
    override open class var godotClassName: StringName { "PinJoint3D" }
    public enum Param: Int64, CaseIterable, CustomDebugStringConvertible {
        /// The force with which the pinned objects stay in positional relation to each other. The higher, the stronger.
        case bias = 0 // PARAM_BIAS
        /// The force with which the pinned objects stay in velocity relation to each other. The higher, the stronger.
        case damping = 1 // PARAM_DAMPING
        /// If above 0, this value is the maximum value for an impulse that this Joint3D produces.
        case impulseClamp = 2 // PARAM_IMPULSE_CLAMP
        /// A textual representation of this instance, suitable for debugging
        public var debugDescription: String {
            switch self {
                case .bias: return ".bias"
                case .damping: return ".damping"
                case .impulseClamp: return ".impulseClamp"
            }
            
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_param: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_param")
        return withUnsafePointer(to: &PinJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2059913726)!
            }
            
        }
        
    }()
    
    /// Sets the value of the specified parameter.
    public final func setParam(_ param: PinJoint3D.Param, value: Double) {
        withUnsafePointer(to: param.rawValue) { pArg0 in
            withUnsafePointer(to: value) { pArg1 in
                withUnsafePointer(to: UnsafeRawPointersN2(pArg0, pArg1)) { pArgs in
                    pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 2) { pArgs in
                        gi.object_method_bind_ptrcall(PinJoint3D.method_set_param, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                    }
                    
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_param: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_param")
        return withUnsafePointer(to: &PinJoint3D.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1758438771)!
            }
            
        }
        
    }()
    
    /// Returns the value of the specified parameter.
    public final func getParam(_ param: PinJoint3D.Param) -> Double {
        var _result: Double = 0.0
        withUnsafePointer(to: param.rawValue) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(PinJoint3D.method_get_param, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result)
                }
                
            }
            
        }
        
        return _result
    }
    
}

