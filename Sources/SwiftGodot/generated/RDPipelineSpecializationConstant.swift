// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Pipeline specialization constant (used by ``RenderingDevice``).
/// 
/// A _specialization constant_ is a way to create additional variants of shaders without actually increasing the number of shader versions that are compiled. This allows improving performance by reducing the number of shader versions and reducing `if` branching, while still allowing shaders to be flexible for different use cases.
/// 
/// This object is used by ``RenderingDevice``.
/// 
open class RDPipelineSpecializationConstant: RefCounted {
    override open class var godotClassName: StringName { "RDPipelineSpecializationConstant" }
    
    /* Properties */
    
    /// The specialization constant's value. Only [bool], integer and float types are valid for specialization constants.
    final public var value: Variant {
        get {
            return get_value ()
        }
        
        set {
            set_value (newValue)
        }
        
    }
    
    /// The identifier of the specialization constant. This is a value starting from `0` and that increments for every different specialization constant for a given shader.
    final public var constantId: UInt32 {
        get {
            return get_constant_id ()
        }
        
        set {
            set_constant_id (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_value: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_value")
        return withUnsafePointer(to: &RDPipelineSpecializationConstant.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1114965689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_value(_ value: Variant) {
        withUnsafePointer(to: value.content) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(RDPipelineSpecializationConstant.method_set_value, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_value: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_value")
        return withUnsafePointer(to: &RDPipelineSpecializationConstant.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1214101251)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_value() -> Variant {
        let _result: Variant = Variant ()
        gi.object_method_bind_ptrcall(RDPipelineSpecializationConstant.method_get_value, UnsafeMutableRawPointer(mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_constant_id: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_constant_id")
        return withUnsafePointer(to: &RDPipelineSpecializationConstant.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_constant_id(_ constantId: UInt32) {
        withUnsafePointer(to: constantId) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(RDPipelineSpecializationConstant.method_set_constant_id, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_constant_id: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_constant_id")
        return withUnsafePointer(to: &RDPipelineSpecializationConstant.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_constant_id() -> UInt32 {
        var _result: UInt32 = 0
        gi.object_method_bind_ptrcall(RDPipelineSpecializationConstant.method_get_constant_id, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
}

