// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Adds a chorus audio effect.
/// 
/// Adds a chorus audio effect. The effect applies a filter with voices to duplicate the audio source and manipulate it through the filter.
open class AudioEffectChorus: AudioEffect {
    override open class var godotClassName: StringName { "AudioEffectChorus" }
    
    /* Properties */
    
    /// The number of voices in the effect.
    final public var voiceCount: Int32 {
        get {
            return get_voice_count ()
        }
        
        set {
            set_voice_count (newValue)
        }
        
    }
    
    /// The effect's raw signal.
    final public var dry: Double {
        get {
            return get_dry ()
        }
        
        set {
            set_dry (newValue)
        }
        
    }
    
    /// The effect's processed signal.
    final public var wet: Double {
        get {
            return get_wet ()
        }
        
        set {
            set_wet (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_set_voice_count: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_voice_count")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_voice_count(_ voices: Int32) {
        withUnsafePointer(to: voices) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_voice_count, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_voice_count: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_voice_count")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_voice_count() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_voice_count, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_voice_delay_ms: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_voice_delay_ms")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceDelayMs(voiceIdx: Int32, delayMs: Double) {
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: delayMs) { pArg1 in
                withUnsafePointer(to: UnsafeRawPointersN2(pArg0, pArg1)) { pArgs in
                    pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 2) { pArgs in
                        gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_voice_delay_ms, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                    }
                    
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_voice_delay_ms: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_voice_delay_ms")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceDelayMs(voiceIdx: Int32) -> Double {
        var _result: Double = 0.0
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_voice_delay_ms, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result)
                }
                
            }
            
        }
        
        return _result
    }
    
    fileprivate static var method_set_voice_rate_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_voice_rate_hz")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceRateHz(voiceIdx: Int32, rateHz: Double) {
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: rateHz) { pArg1 in
                withUnsafePointer(to: UnsafeRawPointersN2(pArg0, pArg1)) { pArgs in
                    pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 2) { pArgs in
                        gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_voice_rate_hz, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                    }
                    
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_voice_rate_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_voice_rate_hz")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceRateHz(voiceIdx: Int32) -> Double {
        var _result: Double = 0.0
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_voice_rate_hz, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result)
                }
                
            }
            
        }
        
        return _result
    }
    
    fileprivate static var method_set_voice_depth_ms: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_voice_depth_ms")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceDepthMs(voiceIdx: Int32, depthMs: Double) {
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: depthMs) { pArg1 in
                withUnsafePointer(to: UnsafeRawPointersN2(pArg0, pArg1)) { pArgs in
                    pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 2) { pArgs in
                        gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_voice_depth_ms, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                    }
                    
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_voice_depth_ms: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_voice_depth_ms")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceDepthMs(voiceIdx: Int32) -> Double {
        var _result: Double = 0.0
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_voice_depth_ms, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result)
                }
                
            }
            
        }
        
        return _result
    }
    
    fileprivate static var method_set_voice_level_db: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_voice_level_db")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceLevelDb(voiceIdx: Int32, levelDb: Double) {
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: levelDb) { pArg1 in
                withUnsafePointer(to: UnsafeRawPointersN2(pArg0, pArg1)) { pArgs in
                    pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 2) { pArgs in
                        gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_voice_level_db, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                    }
                    
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_voice_level_db: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_voice_level_db")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceLevelDb(voiceIdx: Int32) -> Double {
        var _result: Double = 0.0
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_voice_level_db, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result)
                }
                
            }
            
        }
        
        return _result
    }
    
    fileprivate static var method_set_voice_cutoff_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_voice_cutoff_hz")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoiceCutoffHz(voiceIdx: Int32, cutoffHz: Double) {
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: cutoffHz) { pArg1 in
                withUnsafePointer(to: UnsafeRawPointersN2(pArg0, pArg1)) { pArgs in
                    pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 2) { pArgs in
                        gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_voice_cutoff_hz, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                    }
                    
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_voice_cutoff_hz: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_voice_cutoff_hz")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoiceCutoffHz(voiceIdx: Int32) -> Double {
        var _result: Double = 0.0
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_voice_cutoff_hz, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result)
                }
                
            }
            
        }
        
        return _result
    }
    
    fileprivate static var method_set_voice_pan: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_voice_pan")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1602489585)!
            }
            
        }
        
    }()
    
    /// 
    public final func setVoicePan(voiceIdx: Int32, pan: Double) {
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: pan) { pArg1 in
                withUnsafePointer(to: UnsafeRawPointersN2(pArg0, pArg1)) { pArgs in
                    pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 2) { pArgs in
                        gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_voice_pan, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                    }
                    
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_voice_pan: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_voice_pan")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2339986948)!
            }
            
        }
        
    }()
    
    /// 
    public final func getVoicePan(voiceIdx: Int32) -> Double {
        var _result: Double = 0.0
        withUnsafePointer(to: voiceIdx) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_voice_pan, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result)
                }
                
            }
            
        }
        
        return _result
    }
    
    fileprivate static var method_set_wet: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_wet")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_wet(_ amount: Double) {
        withUnsafePointer(to: amount) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_wet, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_wet: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_wet")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_wet() -> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_wet, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_dry: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_dry")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 373806689)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_dry(_ amount: Double) {
        withUnsafePointer(to: amount) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(AudioEffectChorus.method_set_dry, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_dry: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_dry")
        return withUnsafePointer(to: &AudioEffectChorus.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1740695150)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_dry() -> Double {
        var _result: Double = 0.0
        gi.object_method_bind_ptrcall(AudioEffectChorus.method_get_dry, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
}

