// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Represents a GLTF accessor.
/// 
/// GLTFAccessor is a data structure representing GLTF a `accessor` that would be found in the `"accessors"` array. A buffer is a blob of binary data. A buffer view is a slice of a buffer. An accessor is a typed interpretation of the data in a buffer view.
/// 
/// Most custom data stored in GLTF does not need accessors, only buffer views (see ``GLTFBufferView``). Accessors are for more advanced use cases such as interleaved mesh data encoded for the GPU.
/// 
open class GLTFAccessor: Resource {
    override open class var godotClassName: StringName { "GLTFAccessor" }
    
    /* Properties */
    
    /// The index of the buffer view this accessor is referencing. If `-1`, this accessor is not referencing any buffer view.
    final public var bufferView: Int32 {
        get {
            return get_buffer_view ()
        }
        
        set {
            set_buffer_view (newValue)
        }
        
    }
    
    /// The offset relative to the start of the buffer view in bytes.
    final public var byteOffset: Int32 {
        get {
            return get_byte_offset ()
        }
        
        set {
            set_byte_offset (newValue)
        }
        
    }
    
    /// The GLTF component type as an enum. Possible values are 5120 for "BYTE", 5121 for "UNSIGNED_BYTE", 5122 for "SHORT", 5123 for "UNSIGNED_SHORT", 5125 for "UNSIGNED_INT", and 5126 for "FLOAT". A value of 5125 or "UNSIGNED_INT" must not be used for any accessor that is not referenced by mesh.primitive.indices.
    final public var componentType: Int32 {
        get {
            return get_component_type ()
        }
        
        set {
            set_component_type (newValue)
        }
        
    }
    
    /// Specifies whether integer data values are normalized before usage.
    final public var normalized: Bool {
        get {
            return get_normalized ()
        }
        
        set {
            set_normalized (newValue)
        }
        
    }
    
    /// The number of elements referenced by this accessor.
    final public var count: Int32 {
        get {
            return get_count ()
        }
        
        set {
            set_count (newValue)
        }
        
    }
    
    /// The GLTF accessor type as an enum. Possible values are 0 for "SCALAR", 1 for "VEC2", 2 for "VEC3", 3 for "VEC4", 4 for "MAT2", 5 for "MAT3", and 6 for "MAT4".
    final public var accessorType: Int32 {
        get {
            return get_accessor_type ()
        }
        
        set {
            set_accessor_type (newValue)
        }
        
    }
    
    /// The GLTF accessor type as an enum. Use ``accessorType`` instead.
    final public var type: Int32 {
        get {
            return get_type ()
        }
        
        set {
            set_type (newValue)
        }
        
    }
    
    /// Minimum value of each component in this accessor.
    final public var min: PackedFloat64Array {
        get {
            return get_min ()
        }
        
        set {
            set_min (newValue)
        }
        
    }
    
    /// Maximum value of each component in this accessor.
    final public var max: PackedFloat64Array {
        get {
            return get_max ()
        }
        
        set {
            set_max (newValue)
        }
        
    }
    
    /// Number of deviating accessor values stored in the sparse array.
    final public var sparseCount: Int32 {
        get {
            return get_sparse_count ()
        }
        
        set {
            set_sparse_count (newValue)
        }
        
    }
    
    /// The index of the buffer view with sparse indices. The referenced buffer view MUST NOT have its target or byteStride properties defined. The buffer view and the optional byteOffset MUST be aligned to the componentType byte length.
    final public var sparseIndicesBufferView: Int32 {
        get {
            return get_sparse_indices_buffer_view ()
        }
        
        set {
            set_sparse_indices_buffer_view (newValue)
        }
        
    }
    
    /// The offset relative to the start of the buffer view in bytes.
    final public var sparseIndicesByteOffset: Int32 {
        get {
            return get_sparse_indices_byte_offset ()
        }
        
        set {
            set_sparse_indices_byte_offset (newValue)
        }
        
    }
    
    /// The indices component data type as an enum. Possible values are 5121 for "UNSIGNED_BYTE", 5123 for "UNSIGNED_SHORT", and 5125 for "UNSIGNED_INT".
    final public var sparseIndicesComponentType: Int32 {
        get {
            return get_sparse_indices_component_type ()
        }
        
        set {
            set_sparse_indices_component_type (newValue)
        }
        
    }
    
    /// The index of the bufferView with sparse values. The referenced buffer view MUST NOT have its target or byteStride properties defined.
    final public var sparseValuesBufferView: Int32 {
        get {
            return get_sparse_values_buffer_view ()
        }
        
        set {
            set_sparse_values_buffer_view (newValue)
        }
        
    }
    
    /// The offset relative to the start of the bufferView in bytes.
    final public var sparseValuesByteOffset: Int32 {
        get {
            return get_sparse_values_byte_offset ()
        }
        
        set {
            set_sparse_values_byte_offset (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_get_buffer_view: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_buffer_view")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_buffer_view() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_buffer_view, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_buffer_view: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_buffer_view")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_buffer_view(_ bufferView: Int32) {
        withUnsafePointer(to: bufferView) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_buffer_view, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_byte_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_byte_offset")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_byte_offset() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_byte_offset, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_byte_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_byte_offset")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_byte_offset(_ byteOffset: Int32) {
        withUnsafePointer(to: byteOffset) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_byte_offset, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_component_type: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_component_type")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_component_type() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_component_type, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_component_type: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_component_type")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_component_type(_ componentType: Int32) {
        withUnsafePointer(to: componentType) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_component_type, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_normalized: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_normalized")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2240911060)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_normalized() -> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_normalized, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_normalized: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_normalized")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_normalized(_ normalized: Bool) {
        withUnsafePointer(to: normalized) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_normalized, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_count: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_count")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_count() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_count, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_count: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_count")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_count(_ count: Int32) {
        withUnsafePointer(to: count) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_count, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_accessor_type: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_accessor_type")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_accessor_type() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_accessor_type, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_accessor_type: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_accessor_type")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_accessor_type(_ accessorType: Int32) {
        withUnsafePointer(to: accessorType) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_accessor_type, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_type: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_type")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_type() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_type, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_type: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_type")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_type(_ type: Int32) {
        withUnsafePointer(to: type) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_type, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_min: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_min")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 148677866)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_min() -> PackedFloat64Array {
        let _result: PackedFloat64Array = PackedFloat64Array ()
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_min, UnsafeMutableRawPointer(mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_min: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_min")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2576592201)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_min(_ min: PackedFloat64Array) {
        withUnsafePointer(to: min.content) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_min, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_max: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_max")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 148677866)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_max() -> PackedFloat64Array {
        let _result: PackedFloat64Array = PackedFloat64Array ()
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_max, UnsafeMutableRawPointer(mutating: handle), nil, &_result.content)
        return _result
    }
    
    fileprivate static var method_set_max: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_max")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2576592201)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_max(_ max: PackedFloat64Array) {
        withUnsafePointer(to: max.content) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_max, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_sparse_count: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_sparse_count")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_sparse_count() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_sparse_count, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_sparse_count: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_sparse_count")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_sparse_count(_ sparseCount: Int32) {
        withUnsafePointer(to: sparseCount) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_sparse_count, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_sparse_indices_buffer_view: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_sparse_indices_buffer_view")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_sparse_indices_buffer_view() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_sparse_indices_buffer_view, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_sparse_indices_buffer_view: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_sparse_indices_buffer_view")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_sparse_indices_buffer_view(_ sparseIndicesBufferView: Int32) {
        withUnsafePointer(to: sparseIndicesBufferView) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_sparse_indices_buffer_view, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_sparse_indices_byte_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_sparse_indices_byte_offset")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_sparse_indices_byte_offset() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_sparse_indices_byte_offset, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_sparse_indices_byte_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_sparse_indices_byte_offset")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_sparse_indices_byte_offset(_ sparseIndicesByteOffset: Int32) {
        withUnsafePointer(to: sparseIndicesByteOffset) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_sparse_indices_byte_offset, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_sparse_indices_component_type: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_sparse_indices_component_type")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_sparse_indices_component_type() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_sparse_indices_component_type, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_sparse_indices_component_type: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_sparse_indices_component_type")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_sparse_indices_component_type(_ sparseIndicesComponentType: Int32) {
        withUnsafePointer(to: sparseIndicesComponentType) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_sparse_indices_component_type, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_sparse_values_buffer_view: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_sparse_values_buffer_view")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_sparse_values_buffer_view() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_sparse_values_buffer_view, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_sparse_values_buffer_view: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_sparse_values_buffer_view")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_sparse_values_buffer_view(_ sparseValuesBufferView: Int32) {
        withUnsafePointer(to: sparseValuesBufferView) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_sparse_values_buffer_view, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_sparse_values_byte_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_sparse_values_byte_offset")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2455072627)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_sparse_values_byte_offset() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFAccessor.method_get_sparse_values_byte_offset, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_sparse_values_byte_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_sparse_values_byte_offset")
        return withUnsafePointer(to: &GLTFAccessor.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_sparse_values_byte_offset(_ sparseValuesByteOffset: Int32) {
        withUnsafePointer(to: sparseValuesByteOffset) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFAccessor.method_set_sparse_values_byte_offset, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
}

