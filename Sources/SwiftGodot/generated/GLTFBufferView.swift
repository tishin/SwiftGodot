// This file is autogenerated, do not edit

@_implementationOnly import GDExtension

// This file is autogenerated, do not edit
@_implementationOnly import GDExtension

#if CUSTOM_BUILTIN_IMPLEMENTATIONS
import Foundation
#endif
// Generated by Swift code generator - do not edit
@_implementationOnly import GDExtension

/// Represents a GLTF buffer view.
/// 
/// GLTFBufferView is a data structure representing GLTF a `bufferView` that would be found in the `"bufferViews"` array. A buffer is a blob of binary data. A buffer view is a slice of a buffer that can be used to identify and extract data from the buffer.
/// 
/// Most custom uses of buffers only need to use the ``buffer``, ``byteLength``, and ``byteOffset``. The ``byteStride`` and ``indices`` properties are for more advanced use cases such as interleaved mesh data encoded for the GPU.
/// 
open class GLTFBufferView: Resource {
    override open class var godotClassName: StringName { "GLTFBufferView" }
    
    /* Properties */
    
    /// The index of the buffer this buffer view is referencing. If `-1`, this buffer view is not referencing any buffer.
    final public var buffer: Int32 {
        get {
            return get_buffer ()
        }
        
        set {
            set_buffer (newValue)
        }
        
    }
    
    /// The offset, in bytes, from the start of the buffer to the start of this buffer view.
    final public var byteOffset: Int32 {
        get {
            return get_byte_offset ()
        }
        
        set {
            set_byte_offset (newValue)
        }
        
    }
    
    /// The length, in bytes, of this buffer view. If `0`, this buffer view is empty.
    final public var byteLength: Int32 {
        get {
            return get_byte_length ()
        }
        
        set {
            set_byte_length (newValue)
        }
        
    }
    
    /// The stride, in bytes, between interleaved data. If `-1`, this buffer view is not interleaved.
    final public var byteStride: Int32 {
        get {
            return get_byte_stride ()
        }
        
        set {
            set_byte_stride (newValue)
        }
        
    }
    
    /// True if the GLTFBufferView's OpenGL GPU buffer type is an `ELEMENT_ARRAY_BUFFER` used for vertex indices (integer constant `34963`). False if the buffer type is any other value. See <a href="https://github.com/KhronosGroup/glTF-Tutorials/blob/master/gltfTutorial/gltfTutorial_005_BuffersBufferViewsAccessors.md">Buffers, BufferViews, and Accessors</a> for possible values. This property is set on import and used on export.
    final public var indices: Bool {
        get {
            return get_indices ()
        }
        
        set {
            set_indices (newValue)
        }
        
    }
    
    /// True if the GLTFBufferView's OpenGL GPU buffer type is an `ARRAY_BUFFER` used for vertex attributes (integer constant `34962`). False if the buffer type is any other value. See <a href="https://github.com/KhronosGroup/glTF-Tutorials/blob/master/gltfTutorial/gltfTutorial_005_BuffersBufferViewsAccessors.md">Buffers, BufferViews, and Accessors</a> for possible values. This property is set on import and used on export.
    final public var vertexAttributes: Bool {
        get {
            return get_vertex_attributes ()
        }
        
        set {
            set_vertex_attributes (newValue)
        }
        
    }
    
    /* Methods */
    fileprivate static var method_load_buffer_view_data: GDExtensionMethodBindPtr = {
        let methodName = StringName("load_buffer_view_data")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3945446907)!
            }
            
        }
        
    }()
    
    /// Loads the buffer view data from the buffer referenced by this buffer view in the given ``GLTFState``. Interleaved data with a byte stride is not yet supported by this method. The data is returned as a ``PackedByteArray``.
    public final func loadBufferViewData(state: GLTFState?) -> PackedByteArray {
        let _result: PackedByteArray = PackedByteArray ()
        withUnsafePointer(to: state?.handle) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFBufferView.method_load_buffer_view_data, UnsafeMutableRawPointer(mutating: handle), pArgs, &_result.content)
                }
                
            }
            
        }
        
        return _result
    }
    
    fileprivate static var method_get_buffer: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_buffer")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_buffer() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFBufferView.method_get_buffer, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_buffer: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_buffer")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_buffer(_ buffer: Int32) {
        withUnsafePointer(to: buffer) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFBufferView.method_set_buffer, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_byte_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_byte_offset")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_byte_offset() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFBufferView.method_get_byte_offset, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_byte_offset: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_byte_offset")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_byte_offset(_ byteOffset: Int32) {
        withUnsafePointer(to: byteOffset) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFBufferView.method_set_byte_offset, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_byte_length: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_byte_length")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_byte_length() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFBufferView.method_get_byte_length, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_byte_length: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_byte_length")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_byte_length(_ byteLength: Int32) {
        withUnsafePointer(to: byteLength) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFBufferView.method_set_byte_length, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_byte_stride: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_byte_stride")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 3905245786)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_byte_stride() -> Int32 {
        var _result: Int32 = 0
        gi.object_method_bind_ptrcall(GLTFBufferView.method_get_byte_stride, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_byte_stride: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_byte_stride")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 1286410249)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_byte_stride(_ byteStride: Int32) {
        withUnsafePointer(to: byteStride) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFBufferView.method_set_byte_stride, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_indices: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_indices")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_indices() -> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall(GLTFBufferView.method_get_indices, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_indices: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_indices")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_indices(_ indices: Bool) {
        withUnsafePointer(to: indices) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFBufferView.method_set_indices, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
    fileprivate static var method_get_vertex_attributes: GDExtensionMethodBindPtr = {
        let methodName = StringName("get_vertex_attributes")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 36873697)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func get_vertex_attributes() -> Bool {
        var _result: Bool = false
        gi.object_method_bind_ptrcall(GLTFBufferView.method_get_vertex_attributes, UnsafeMutableRawPointer(mutating: handle), nil, &_result)
        return _result
    }
    
    fileprivate static var method_set_vertex_attributes: GDExtensionMethodBindPtr = {
        let methodName = StringName("set_vertex_attributes")
        return withUnsafePointer(to: &GLTFBufferView.godotClassName.content) { classPtr in
            withUnsafePointer(to: &methodName.content) { mnamePtr in
                gi.classdb_get_method_bind(classPtr, mnamePtr, 2586408642)!
            }
            
        }
        
    }()
    
    @inline(__always)
    fileprivate final func set_vertex_attributes(_ isAttributes: Bool) {
        withUnsafePointer(to: isAttributes) { pArg0 in
            withUnsafePointer(to: UnsafeRawPointersN1(pArg0)) { pArgs in
                pArgs.withMemoryRebound(to: UnsafeRawPointer?.self, capacity: 1) { pArgs in
                    gi.object_method_bind_ptrcall(GLTFBufferView.method_set_vertex_attributes, UnsafeMutableRawPointer(mutating: handle), pArgs, nil)
                }
                
            }
            
        }
        
        
    }
    
}

